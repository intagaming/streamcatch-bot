# Compose for dev only
services:
  streamcatch-bot:
    image: streamcatch-bot
    build: .
    restart: unless-stopped
    command: -d
    ports:
      - "8080:8080"
    environment:
      - APP_ID=${APP_ID}
      - BOT_TOKEN=${BOT_TOKEN}
      - MEDIA_SERVER_HLS_URL=${MEDIA_SERVER_HLS_URL}
      - MEDIA_SERVER_PLAYBACK_URL=${MEDIA_SERVER_PLAYBACK_URL}
      - RECORDING_URL=${RECORDING_URL}
      - TWITCH_CLIENT_ID=${TWITCH_CLIENT_ID}
      - TWITCH_CLIENT_SECRET=${TWITCH_CLIENT_SECRET}
      - TWITCH_AUTH_TOKEN=${TWITCH_AUTH_TOKEN}
      - MEDIA_SERVER_RTSP_HOST=mediaserver:8554
      - MEDIA_SERVER_PUBLISH_USER=${MEDIA_SERVER_PUBLISH_USER}
      - MEDIA_SERVER_PUBLISH_PASSWORD=${MEDIA_SERVER_PUBLISH_PASSWORD}
      - MEDIA_SERVER_API_URL=http://mediaserver:9997
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=
    networks:
      - streamcatch

  mediaserver:
    image: mediamtx
    build: mediamtx
    ports:
      - "8888:8888"
      - "9996:9996"
      - "9997:9997"
      - "8554:8554"
    restart: unless-stopped
    networks:
      - streamcatch

  redis:
    image: bitnami/redis:6.2
    ports:
      - "6379:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - streamcatch

networks:
  streamcatch:
